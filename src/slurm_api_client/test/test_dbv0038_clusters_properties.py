# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm DB.

    The version of the OpenAPI document: Slurm-23.11.4&openapi/dbv0.0.38&openapi/dbv0.0.39&openapi/v0.0.39&openapi/slurmctld&openapi/v0.0.38&openapi/slurmdbd
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dbv0038_clusters_properties import Dbv0038ClustersProperties

class TestDbv0038ClustersProperties(unittest.TestCase):
    """Dbv0038ClustersProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Dbv0038ClustersProperties:
        """Test Dbv0038ClustersProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Dbv0038ClustersProperties`
        """
        model = Dbv0038ClustersProperties()
        if include_optional:
            return Dbv0038ClustersProperties(
                clusters = openapi_client.models.dbv0/0/38_cluster_info.dbv0.0.38_cluster_info(
                    controller = openapi_client.models.dbv0_0_38_cluster_info_controller.dbv0_0_38_cluster_info_controller(
                        host = '', 
                        port = 56, ), 
                    flags = [
                        ''
                        ], 
                    name = '', 
                    nodes = '', 
                    select_plugin = '', 
                    associations = openapi_client.models.dbv0_0_38_cluster_info_associations.dbv0_0_38_cluster_info_associations(
                        root = openapi_client.models.dbv0/0/38_association_short_info.dbv0.0.38_association_short_info(
                            account = '', 
                            cluster = '', 
                            partition = '', 
                            user = '', ), ), 
                    rpc_version = 56, 
                    tres = [
                        openapi_client.models.dbv0/0/38_response_tres.dbv0.0.38_response_tres(
                            meta = openapi_client.models.dbv0/0/38_meta.dbv0.0.38_meta(
                                plugin = openapi_client.models.dbv0_0_38_meta_plugin.dbv0_0_38_meta_plugin(
                                    type = '', 
                                    name = '', ), 
                                slurm = openapi_client.models.dbv0_0_38_meta_slurm.dbv0_0_38_meta_Slurm(
                                    version = openapi_client.models.dbv0_0_38_meta_slurm_version.dbv0_0_38_meta_Slurm_version(
                                        major = '', 
                                        micro = '', 
                                        minor = '', ), 
                                    release = '', ), ), 
                            errors = [
                                openapi_client.models.dbv0/0/38_error.dbv0.0.38_error(
                                    error_number = 56, 
                                    error = '', 
                                    source = '', 
                                    description = '', )
                                ], )
                        ], )
            )
        else:
            return Dbv0038ClustersProperties(
        )
        """

    def testDbv0038ClustersProperties(self):
        """Test Dbv0038ClustersProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
