# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm DB.

    The version of the OpenAPI document: Slurm-23.11.4&openapi/dbv0.0.38&openapi/dbv0.0.39&openapi/v0.0.39&openapi/slurmctld&openapi/v0.0.38&openapi/slurmdbd
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v0040_user import V0040User

class TestV0040User(unittest.TestCase):
    """V0040User unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0040User:
        """Test V0040User
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0040User`
        """
        model = V0040User()
        if include_optional:
            return V0040User(
                administrator_level = [
                    'Not Set'
                    ],
                associations = [
                    openapi_client.models.v0/0/40_assoc_short.v0.0.40_assoc_short(
                        account = '', 
                        cluster = '', 
                        partition = '', 
                        user = '', 
                        id = 56, )
                    ],
                coordinators = [
                    openapi_client.models.v0/0/40_coord.v0.0.40_coord(
                        name = '', 
                        direct = True, )
                    ],
                default = openapi_client.models.v0_0_39_user_default.v0_0_39_user_default(
                    account = '', 
                    wckey = '', ),
                flags = [
                    'NONE'
                    ],
                name = '',
                old_name = '',
                wckeys = [
                    openapi_client.models.v0/0/40_wckey.v0.0.40_wckey(
                        accounting = [
                            openapi_client.models.v0/0/40_accounting.v0.0.40_accounting(
                                allocated = openapi_client.models.v0_0_39_accounting_allocated.v0_0_39_accounting_allocated(
                                    seconds = 56, ), 
                                id = 56, 
                                start = 56, 
                                tres = openapi_client.models.v0/0/40_tres.v0.0.40_tres(
                                    type = '', 
                                    name = '', 
                                    id = 56, 
                                    count = 56, ), )
                            ], 
                        cluster = '', 
                        id = 56, 
                        name = '', 
                        user = '', 
                        flags = [
                            'DELETED'
                            ], )
                    ]
            )
        else:
            return V0040User(
                name = '',
        )
        """

    def testV0040User(self):
        """Test V0040User"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
