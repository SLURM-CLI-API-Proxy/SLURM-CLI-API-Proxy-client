# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm DB.

    The version of the OpenAPI document: Slurm-23.11.4&openapi/dbv0.0.38&openapi/dbv0.0.39&openapi/v0.0.39&openapi/slurmctld&openapi/v0.0.38&openapi/slurmdbd
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dbv0038_update_users import Dbv0038UpdateUsers

class TestDbv0038UpdateUsers(unittest.TestCase):
    """Dbv0038UpdateUsers unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Dbv0038UpdateUsers:
        """Test Dbv0038UpdateUsers
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Dbv0038UpdateUsers`
        """
        model = Dbv0038UpdateUsers()
        if include_optional:
            return Dbv0038UpdateUsers(
                users = [
                    openapi_client.models.dbv0/0/38_user.dbv0.0.38_user(
                        administrator_level = '', 
                        associations = [
                            openapi_client.models.dbv0/0/38_association_short_info.dbv0.0.38_association_short_info(
                                account = '', 
                                cluster = '', 
                                partition = '', 
                                user = '', )
                            ], 
                        coordinators = [
                            openapi_client.models.dbv0/0/38_coordinator_info.dbv0.0.38_coordinator_info(
                                name = '', 
                                direct = 56, )
                            ], 
                        default = openapi_client.models.dbv0_0_38_user_default.dbv0_0_38_user_default(
                            account = '', 
                            wckey = '', ), 
                        flags = [
                            ''
                            ], 
                        name = '', )
                    ]
            )
        else:
            return Dbv0038UpdateUsers(
        )
        """

    def testDbv0038UpdateUsers(self):
        """Test Dbv0038UpdateUsers"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
