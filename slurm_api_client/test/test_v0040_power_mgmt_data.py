# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm DB.

    The version of the OpenAPI document: Slurm-23.11.4&openapi/dbv0.0.38&openapi/dbv0.0.39&openapi/v0.0.39&openapi/slurmctld&openapi/v0.0.38&openapi/slurmdbd
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v0040_power_mgmt_data import V0040PowerMgmtData

class TestV0040PowerMgmtData(unittest.TestCase):
    """V0040PowerMgmtData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0040PowerMgmtData:
        """Test V0040PowerMgmtData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0040PowerMgmtData`
        """
        model = V0040PowerMgmtData()
        if include_optional:
            return V0040PowerMgmtData(
                maximum_watts = openapi_client.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                current_watts = 56,
                total_energy = 56,
                new_maximum_watts = 56,
                peak_watts = 56,
                lowest_watts = 56,
                new_job_time = openapi_client.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                state = 56,
                time_start_day = 56
            )
        else:
            return V0040PowerMgmtData(
        )
        """

    def testV0040PowerMgmtData(self):
        """Test V0040PowerMgmtData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
